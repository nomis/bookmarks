import Rails from "@rails/ujs"

var loadMore = function() {
	var moreLink = document.getElementById("more_link");
	if (!moreLink) {
		console.log("No more pages");
		// document.getElementById("pagination").innerHTML = "";
		incrementalStop();
		return;
	}

	if (moreLink.dataset.loading) {
		return;
	}

	var viewBottom = document.documentElement.scrollTop + document.documentElement.clientHeight * 1.25;
	var list = document.getElementById("bookmarks");
	var listBottom = list.offsetTop + list.clientHeight;

	if (viewBottom >= listBottom) {
		console.log("Loading next page");

		moreLink.dataset.loading = true;

		Rails.ajax({
			url: moreLink.dataset.href,
			type: "get",
			dataType: "json",
			success: function(data) {
				console.log(`Adding page ${data["page"]}`);
				document.getElementById("bookmarks").insertAdjacentHTML("beforeend", data["bookmarks"]);
				document.getElementById("pagination").innerHTML = data["pagination"];
				console.log(`Added page ${data["page"]}`);

				loadMore();
			},
			error: function(data) {
				console.log(`Failed to load next page: ${data}`);
			}
		})
	}
};

export function incrementalStart() {
	window.addEventListener("resize", loadMore);
	window.addEventListener("scroll", loadMore);
	window.addEventListener("load", loadMore);
	console.log("Automatic page loading enabled");
};

export function incrementalStop() {
	window.removeEventListener("resize", loadMore);
	window.removeEventListener("scroll", loadMore);
	window.removeEventListener("load", loadMore);
	console.log("Automatic page loading disabled");
};

function onPasteURI(src, dst, msg, event) {
	var uri = event.clipboardData.getData("text");
	if (uri.match(/https?:\/\//)) {
		console.log(`HTTP URL pasted: ${uri}`);

		if (src.dataset.loading) {
			return;
		}

		dst.disabled = true;

		src.dataset.loading = true;
		src.dataset.lookup = "pending";
		msg.innerText = "";

		Rails.ajax({
			url: "<%= Rails.application.routes.url_helpers.lookup_url_path(format: "json") %>",
			type: "get",
			data: "uri=" + encodeURIComponent(uri)
				+ "&user_agent=" + encodeURIComponent(navigator.userAgent),
			dataType: "json",
			success: function(data) {
				dst.disabled = false;

				console.log(`Title for URL: ${data["title"]}`);

				if (data["title"]) {
					dst.value = data["title"];
				}

				delete src.dataset.loading;
				src.dataset.lookup = "success";
			},
			error: function(data) {
				dst.disabled = false;

				console.log(`Failed to get title for URL: ${data}`);

				msg.innerText = data;

				delete src.dataset.loading;
				src.dataset.lookup = "error";
			}
		})
	}
};

function onInputURI(src, msg, event) {
	if (src.dataset.lookup && !src.dataset.loading) {
		console.log(`Clearing lookup result`);
		delete src.dataset.lookup;
		msg.innerText = "";
	}
};

export function setupPasteURI(src, dst, msg) {
	src = document.getElementById(src);
	dst = document.getElementById(dst);
	msg = document.getElementById(msg);
	src.addEventListener("paste", onPasteURI.bind(null, src, dst, msg));
	src.addEventListener("input", onInputURI.bind(null, src, msg));
	console.log("Automatic HTTP URL paste handling enabled");
};
